workflows:
  unity-ios-release-publish:
    name: Unity iOS Release + Publish
    instance_type: mac_mini_m2
    max_build_duration: 120

    environment:
      vars:
        UNITY_VERSION: 6000.0.47f1
        UNITY_CHANGESET: 2ad1ed33fd3b
        BUILD_SCRIPT: BuildiOS
        UNITY_IOS_DIR: "iOSBuild"
        XCODE_PROJECT: "Unity-iPhone.xcodeproj"
        XCODE_SCHEME: "Unity-iPhone"
        PROJECT_PATH: "StapeTowerDefenceTD"
        BUNDLE_IDENTIFIER: "com.Stake.StapeDefenderGame"
      groups:
        - unity_credentials
        - app_store_credentials
      xcode: "16.4"
      ios_signing:
        distribution_type: app_store
        bundle_identifier: "com.Stake.StapeDefenderGame"
        provisioning_profile_name: "KeyMOB"
        certificate_name: "app_store_keyp12"

    scripts:
      - name: üîÅ Full Clean
        script: |
          rm -rf "$HOME/.cache/unity3d" "$HOME/.config/unity3d" "$HOME/.local/share/unity3d"
          rm -rf "$CM_BUILD_DIR/$PROJECT_PATH/Library" "$CM_BUILD_DIR/$PROJECT_PATH/Temp" \
                 "$CM_BUILD_DIR/$PROJECT_PATH/obj" "$CM_BUILD_DIR/$PROJECT_PATH/Packages/PackageCache"

      - name: üîß Install Unity
        script: |
          yes Y | /Applications/Unity\ Hub.app/Contents/MacOS/Unity\ Hub \
            -- --headless install --version $UNITY_VERSION --changeset $UNITY_CHANGESET -a arm64
          yes Y | /Applications/Unity\ Hub.app/Contents/MacOS/Unity\ Hub \
            -- --headless install-modules --version $UNITY_VERSION -m ios -a arm64
          echo "UNITY_BIN=/Applications/Unity/Hub/Editor/${UNITY_VERSION}/Unity.app/Contents/MacOS/Unity" >> $CM_ENV

      - name: üîê Activate Unity License
        script: |
          "$UNITY_BIN" -batchmode -quit \
            -serial "${UNITY_SERIAL?}" \
            -username "${UNITY_EMAIL?}" \
            -password "${UNITY_PASSWORD?}" \
            -logFile /tmp/unity_activation.log || true
          cat /tmp/unity_activation.log

      - name: üéÆ Build Unity iOS Project
        script: |
          "$UNITY_BIN" -batchmode -quit \
            -projectPath "$CM_BUILD_DIR/$PROJECT_PATH" \
            -executeMethod BuildScript.$BUILD_SCRIPT \
            -logFile /tmp/unity_build.log
          cat /tmp/unity_build.log | tail -n 50
          grep -q "Build succeeded" /tmp/unity_build.log || exit 1

      - name: üì¶ Build IPA
        script: |
          IOS_DIR="$CM_BUILD_DIR/$PROJECT_PATH/$UNITY_IOS_DIR"
          cd "$IOS_DIR"

          ARCHIVE_PATH="build/ios/xcarchive/Unity-iPhone.xcarchive"
          EXPORT_PATH="build/ios/export"
          EXPORT_OPTIONS_PLIST="exportOptions.plist"

          mkdir -p "$EXPORT_PATH"

          xcodebuild archive \
            -project "$XCODE_PROJECT" \
            -scheme "$XCODE_SCHEME" \
            -archivePath "$ARCHIVE_PATH" \
            -destination "generic/platform=iOS" \
            -allowProvisioningUpdates \
            -allowProvisioningDeviceRegistration \
            -configuration Release \
            -derivedDataPath build/DerivedData \
            -quiet

          cat <<EOF > "$EXPORT_OPTIONS_PLIST"
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>teamID</key>
            <string>${APP_STORE_TEAM_ID}</string>
            <key>uploadBitcode</key>
            <true/>
            <key>compileBitcode</key>
            <true/>
          </dict>
          </plist>
          EOF

          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportPath "$EXPORT_PATH" \
            -exportOptionsPlist "$EXPORT_OPTIONS_PLIST"

          IPA_PATH="$(find "$EXPORT_PATH" -name '*.ipa' | head -n 1)"
          if [ ! -f "$IPA_PATH" ]; then
            echo "‚ùå IPA not created"
            exit 1
          fi

      - name: üöÄ Upload to App Store
        script: |
          xcrun altool --upload-app \
            --type ios \
            --file "$IPA_PATH" \
            --apiKey "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --apiIssuer "$APP_STORE_CONNECT_ISSUER_ID" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --verbose

      - name: ‚ôªÔ∏è Return Unity License
        script: |
          "$UNITY_BIN" -batchmode -quit -returnlicense || true

    artifacts:
      - "**/*.ipa"
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM